name: Run sed to replace in side a file in another repository
description: >-
  Usefull to update docker container tags in a gitops setup for automatically triggering deploy
inputs:
  target-file:
    description: The file to run the sed command on
    required: true
  sed-regex-match:
    description: the regex match to find and replace
    required: true
  sed-new-value:
    description: The string to fill in
    required: true
  destination-github-username:
    description: Name of the destination username/organization
    required: true
  destination-repository-name:
    description: Destination repository
    required: true
  user-email:
    description: Email for the git commit
    required: true
  github-server:
    description: 'Github server'
    default: 'github.com'
    required: false
  user-name:
    description: >-
      [Optional] Name for the git commit. Defaults to the destination
      username/organization name
    required: false
    default: ''
  destination-repository-username:
    description: '[Optional] Username/organization for the destination repository'
    required: false
    default: ''
  target-branch:
    description: >-
      [Optional] set target branch name for the destination repository. Defaults
      to "main"
    default: main
    required: false
  commit-message:
    description: >-
      [Optional] commit message for the output repository. ORIGIN_COMMIT is
      replaced by the URL@commit in the origin repo
    default: Update from ORIGIN_COMMIT
    required: false
  target-directory:
    description: '[Optional] The directory to wipe and replace in the target repository'
    default: ''
    required: false

runs:
  using: docker
  image: Dockerfile
  args:
    - '${{ inputs.target-file}}'
    - '${{ inputs.sed-regex-match}}'
    - '${{ inputs.sed-new-value}}'
    - '${{ inputs.destination-github-username }}'
    - '${{ inputs.destination-repository-name }}'
    - '${{ inputs.github-server }}'
    - '${{ inputs.user-email }}'
    - '${{ inputs.user-name }}'
    - '${{ inputs.destination-repository-username }}'
    - '${{ inputs.target-branch }}'
    - '${{ inputs.commit-message }}'
    - '${{ inputs.target-directory }}'
branding:
  icon: git-commit
  color: green
